// Copyright (c) 2025 Ziga Miklosic
// All Rights Reserved
// This software is under MIT licence (https://opensource.org/licenses/MIT)
////////////////////////////////////////////////////////////////////////////////
/**
* @file     led_cfg.c
* @brief    LED configurations
* @author   Ziga Miklosic
* @email    ziga.miklosic@gmail.com
* @date     01.02.2025
* @version  V1.2.0
*/
////////////////////////////////////////////////////////////////////////////////
/**
 * @addtogroup LED_CFG
 * @{ <!-- BEGIN GROUP -->
 *
 *
 *     Configuration for LED
*
*     User shall put code inside inside code block start with
*     "USER_CODE_BEGIN" and with end of "USER_CODE_END".
 *
 */
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Includes
////////////////////////////////////////////////////////////////////////////////
#include "led_cfg.h"

////////////////////////////////////////////////////////////////////////////////
// Variables
////////////////////////////////////////////////////////////////////////////////

/**
 *     LED configuration table
 *
 *
 *    @brief     This table is being used for setting up LED low level drivers.
 *
 *            Two options are supported:
 *                1. GPIO
 *                2. Timer PWM
 *
 *
 *     @note     Low level gpio and timer code must be compatible!
 */
static const led_cfg_t g_led_cfg[ eLED_NUM_OF ] =
{

    // USER CODE BEGIN...

    // -------------------------------------------------------------------------------------------------------------------------------------------------------
    //  TIEMR DRIVERS       Driver type                     LED Timer                           Initial State               Polarity
    // -------------------------------------------------------------------------------------------------------------------------------------------------------
    [eLED_LCD]          = { .drv_type = eLED_DRV_TIMER_PWM, .drv_ch.gpio_pin = eTIMER_CH_LCD,   .initial_state = eLED_OFF,   .polarity = eLED_POL_ACTIVE_HIGH    },

    // -------------------------------------------------------------------------------------------------------------------------------------------------------
	//  GPIO DRIVERS       Driver type                      LED GPIO                            Initial State               Polarity
	// -------------------------------------------------------------------------------------------------------------------------------------------------------
    #ifdef __HW_F9020110_
        [eLED_DEBUG]    = { .drv_type = eLED_DRV_GPIO,      .drv_ch.gpio_pin = eGPIO_DBG_LED,   .initial_state = eLED_OFF,  .polarity = eLED_POL_ACTIVE_HIGH    },
    #endif

    // USER CODE END...

};

////////////////////////////////////////////////////////////////////////////////
// Functions
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
/**
*        Get LEDs configuration table
*
* @return        pointer to configuration table
*/
////////////////////////////////////////////////////////////////////////////////
const led_cfg_t * led_cfg_get_table(void)
{
    return (led_cfg_t*) &g_led_cfg;
}

////////////////////////////////////////////////////////////////////////////////
/*!
 * @} <!-- END GROUP -->
 */
////////////////////////////////////////////////////////////////////////////////
